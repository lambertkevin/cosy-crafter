version: '3.8'

services:
  mongo-service:
    container_name: mongo-service
    image: mongo:4.4.0
    volumes:
      - ./services/mongo-service/db:/data/db
      - ./services/mongo-service/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    env_file:
      - services.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - PODCAST_DB_NAME=${PODCAST_DB_NAME}
      - PODCAST_DB_USER=${PODCAST_DB_USER}
      - PODCAST_DB_PASSWORD=${PODCAST_DB_PASSWORD}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:27017']
      interval: 10s
      timeout: 10s
      retries: 5

  podcast-service:
    container_name: podcast-service
    image: 'node:12.18'
    user: 'node'
    working_dir: /home/node/app
    volumes:
      - ./services/podcast-service:/home/node/app
      - type: bind
        source: .keys/auth.pem
        target: /.keys/auth.pem
        read_only: true
    expose:
      - ${PODCAST_SERVICE_PORT}
    ports:
      - '${PODCAST_SERVICE_PORT}:${PODCAST_SERVICE_PORT}'
    env_file:
      - services.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - PODCAST_DB_NAME=${PODCAST_DB_NAME}
      - PODCAST_DB_USER=${PODCAST_DB_USER}
      - PODCAST_DB_PASSWORD=${PODCAST_DB_PASSWORD}
      - RSA_KEYS_LOCATION=${RSA_KEYS_LOCATION}
      - RSA_KEYS_NAME=${RSA_KEYS_NAME}
      - SERVICE_JWT_SECRET=${SERVICE_JWT_SECRET}
      - SENTRY_DSN_PODCAST_SERVICE=${SENTRY_DSN_PODCAST_SERVICE}
    command: ./run.sh
    links:
      - mongo-service
      - auth-service

  storage-service:
    container_name: storage-service
    image: 'node:12.18'
    user: 'node'
    working_dir: /home/node/app
    volumes:
      - ./services/storage-service:/home/node/app
      - type: bind
        source: .keys/auth.pem
        target: /.keys/auth.pem
        read_only: true
    expose:
      - ${STORAGE_SERVICE_PORT}
    ports:
      - '${STORAGE_SERVICE_PORT}:${STORAGE_SERVICE_PORT}'
    env_file:
      - services.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - SCALEWAY_BUCKET_NAME=${SCALEWAY_BUCKET_NAME}
      - SCALEWAY_REGION=${SCALEWAY_REGION}
      - SCALEWAY_ENDPOINT=${SCALEWAY_ENDPOINT}
      - SCALEWAY_ACCESS_KEY_ID=${SCALEWAY_ACCESS_KEY_ID}
      - SCALEWAY_SECRET_ACCESS_KEY=${SCALEWAY_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - RSA_KEYS_LOCATION=${RSA_KEYS_LOCATION}
      - RSA_KEYS_NAME=${RSA_KEYS_NAME}
      - SERVICE_JWT_SECRET=${SERVICE_JWT_SECRET}
      - SENTRY_DSN_STORAGE_SERVICE=${SENTRY_DSN_STORAGE_SERVICE}
    command: ./run.sh
    links:
      - auth-service

  auth-service:
    container_name: auth-service
    image: 'node:12.18'
    user: 'root'
    working_dir: /home/node/app
    volumes:
      - ./services/auth-service:/home/node/app
      - type: bind
        source: .keys
        target: /.keys
        read_only: true
    expose:
      - ${AUTH_SERVICE_PORT}
    ports:
      - '${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}'
    env_file:
      - services.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - AUTH_DB_NAME=${AUTH_DB_NAME}
      - AUTH_DB_USER=${AUTH_DB_USER}
      - AUTH_DB_PASSWORD=${AUTH_DB_PASSWORD}
      - SERVICE_JWT_SECRET=${SERVICE_JWT_SECRET}
      - SERVICE_JWT_REFRESH_SECRET=${SERVICE_JWT_REFRESH_SECRET}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - RSA_KEYS_LOCATION=${RSA_KEYS_LOCATION}
      - RSA_KEYS_NAME=${RSA_KEYS_NAME}
    command: ./run.sh
    links:
      - mongo-service

  transcoder-service:
    container_name: transcoder-service
    build:
      context: ./services/transcoder-service
    working_dir: /home/node/app
    volumes:
      - ./services/transcoder-service:/home/node/app
      - type: bind
        source: .keys/auth.pem
        target: /.keys/auth.pem
        read_only: true
    expose:
      - ${TRANSCODER_SERVICE_PORT}
    ports:
      - '${TRANSCODER_SERVICE_PORT}:${TRANSCODER_SERVICE_PORT}'
    env_file:
      - services.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - RSA_KEYS_LOCATION=${RSA_KEYS_LOCATION}
      - RSA_KEYS_NAME=${RSA_KEYS_NAME}
      - SENTRY_DSN_TRANSCODER_SERVICE=${SENTRY_DSN_TRANSCODER_SERVICE}
    entrypoint: ./run.sh
